@using Microsoft.AspNetCore.Identity
@inject SignInManager<DomainModel.Person> SignInManager
@inject UserManager<DomainModel.Person> UserManager
@{var person = @UserManager.GetUserAsync(User).Result ==null? new DomainModel.Person() { LastName = "Reconnectez", FirstName="Vous"} : @UserManager.GetUserAsync(User).Result; }

    <ul class="navbar-nav">
        @if (SignInManager.IsSignedIn(User))
        {
            <li class="nav-item">
                @if (User.IsInRole("ROLE_USER"))
                {
                <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/IndexPatient" title="Manage">@person.LastName @person.FirstName!</a>
                }

                @if (User.IsInRole("ROLE_ADMIN") || User.IsInRole("ROLE_SUPER_ADMIN"))
                {
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/IndexNurse" title="Manage">@person.LastName @person.FirstName!</a>
                }
            </li>

        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-dark">Déconnexion</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/RegisterPatient">S'inscrire</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Connexion</a>
        </li>
    }
</ul>